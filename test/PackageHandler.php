<?php

namespace Cradle\Package;

use StdClass;
use PHPUnit\Framework\TestCase;
use Cradle\Http\Request;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-27 at 13:49:45.
 */
class Cradle_Package_PackageHandler_Test extends TestCase
{
  /**
   * @var PackageHandler
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp()
  {
    $this->object = new PackageHandler;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown()
  {
  }

  /**
   * @covers Cradle\Package\PackageTrait::package
   * @covers Cradle\Package\PackageHandler::__invoke
   */
  public function testPackage()
  {
    $object = $this->object;
    $actual = $object('io')->makePayload();
    $this->assertTrue(is_array($actual));

    $this->assertInstanceOf('Cradle\Package\Package', $object('resolver'));
    $this->assertInstanceOf('Cradle\Package\Package', $object('http'));
    $this->assertInstanceOf('Cradle\Package\Package', $object('event'));

    $actual = $object('http')->get('/foo/bar', function() {});
    $this->assertInstanceOf('Cradle\Package\Package', $actual);
  }

  /**
   * @covers Cradle\Package\PackageHandler::getPackages
   */
  public function testGetPackages()
  {
    $object = $this->object;
    $this->assertTrue(is_array($this->object->getPackages()));
  }
}
