<?php

namespace Cradle\Package\Http;

use StdClass;
use PHPUnit\Framework\TestCase;

use Cradle\Package\PackageHandler;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-27 at 13:49:45.
 */
class Cradle_Package_Http_HttpPackage_Test extends TestCase
{
  /**
   * @var HttpPackage
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp()
  {
    $handler = new PackageHandler;
    $this->object = new HttpPackage($handler);
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown()
  {
  }

  /**
   * @covers Cradle\Package\Http\HttpPackage::all
   */
  public function testAll()
  {
    $instance = $this->object->all('/foo/bar', function() {});
    $this->assertInstanceOf('Cradle\Package\Http\HttpPackage', $instance);
  }

  /**
   * @covers Cradle\Package\Http\HttpPackage::delete
   */
  public function testDelete()
  {
    $instance = $this->object->delete('/foo/bar', function() {});
    $this->assertInstanceOf('Cradle\Package\Http\HttpPackage', $instance);
  }

  /**
   * @covers Cradle\Package\Http\HttpPackage::get
   */
  public function testGet()
  {
    $instance = $this->object->get('/foo/bar', function() {});
    $this->assertInstanceOf('Cradle\Package\Http\HttpPackage', $instance);
  }

  /**
   * @covers Cradle\Package\Http\HttpPackage::post
   */
  public function testPost()
  {
    $instance = $this->object->post('/foo/bar', function() {});
    $this->assertInstanceOf('Cradle\Package\Http\HttpPackage', $instance);
  }

  /**
   * @covers Cradle\Package\Http\HttpPackage::put
   */
  public function testPut()
  {
    $instance = $this->object->put('/foo/bar', function() {});
    $this->assertInstanceOf('Cradle\Package\Http\HttpPackage', $instance);
  }

  /**
   * @covers Cradle\Package\Http\HttpPackage::route
   */
  public function testRoute()
  {
    $instance = $this->object->route('foobar', '/foo/bar', function() {});
    $this->assertInstanceOf('Cradle\Package\Http\HttpPackage', $instance);

    $instance = $this->object->route('foobar', '/foo/bar', 'foobar');
    $this->assertInstanceOf('Cradle\Package\Http\HttpPackage', $instance);

    $instance = $this->object->route('foobar', '/foo/bar', 'foobar', 'foobar2');
    $this->assertInstanceOf('Cradle\Package\Http\HttpPackage', $instance);
  }
}
